#!/bin/sh

echo "";
if [ -n "$(git status --porcelain)" ]; then
  echo "${green}✓${reset} There are changes";
	if [ -n "$(git diff --name-only --cached)" ]; then
		echo "${green}✓${reset} And they are staged";
	else
		echo "${red}×${reset} But they are not staged";
		exit 1;
	fi
else
  echo "${red}×${reset} There are no changes";
	exit 1;
fi
echo "";

if [[ $# -lt 1 ]]; then
	echo "${red}Please provide a commit message${reset}";
	exit;
fi

packageJsonPath="package.json"
if [ -d "./scheduler.frontend.ng2" ]; then
    packageJsonPath="scheduler.frontend.ng2/package.json"
fi

# If environment var GIT_ICON_ARRAY is not set
# Get fallback
if [ -z "$GIT_ICON_ARRAY" ];
then GIT_ICON_ARRAY=(
	"🐛 bugfix | tests"
	"💅 ui"
	"🐣 pillefax"
	"✨ feature"
	"♻️ refactoring | lint"
	"🧹 cleanup"
	" - NOTHING - "
	"💬 text | i18n | l10n | docs"
	"⚡️ performance"
	"📦 npm | node"
	"🔧 scripts or config"
	# NOTE: More of them here: gitmoji --list
); fi

function getEmojiByKey() {
	if [[ $1 == '-' ]]; then
		echo ''
	else
		echo $1
	fi
}

bugsUrl="$(jq -r .bugs.url "$packageJsonPath")"
atlassianUrlFromBugsUrl=$(echo $bugsUrl | grep -o 'atlassian\.net')
if [ -n "$atlassianUrlFromBugsUrl" ]; then
	echo "${orange}Ticket NR? (default: NO_JIRA_ISSUE)${reset} `echo $'\n'`";
	PS3='Please enter your choice: '
	read TICKET_NR
	echo

	if [[ $TICKET_NR ]]; then
		TICKET_NR="$TICKET_NR";
	else
		TICKET_NR="NO_JIRA_ISSUE";
	fi
fi

echo "${orange}What kind of commit is this?${reset} `echo $'\n'`";
PS3='Please enter your choice: '
select opt in "${GIT_ICON_ARRAY[@]}"
do
	EMOJI=$(getEmojiByKey $opt)
	echo $SELECTED_EMOJI
	break
done

read -p "${orange}Skip CI?${reset} [${green}y${reset}/${red}N${reset}] " -n 1 -r
if [[ $REPLY =~ ^[Yy]$ ]]; then
	SKIP_CI='[skip ci]'
	echo ''
fi

COMMIT_MESSAGE="$TICKET_NR $EMOJI $@ $SKIP_CI"

echo '=>> git commit -m "'$COMMIT_MESSAGE'"';
git commit -m "$COMMIT_MESSAGE";
