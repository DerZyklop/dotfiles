# History (src: https://unix.stackexchange.com/questions/1288/preserve-bash-history-in-multiple-terminal-windows)
export HISTCONTROL=ignoredups:erasedups  # no duplicate entries
export HISTSIZE=100000                   # big big history
export HISTFILESIZE=$HISTSIZE
# Save and reload the history after each command finishes
export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

# Prefer US English and use UTF-8
#export LANG="en_US.UTF-8";
export LC_ALL="de_DE.UTF-8";
export LC_NUMERIC="de_DE@currency=EUR";
export LC_TIME="de_DE@currency=EUR";
export LC_COLLATE="de_DE@currency=EUR";
export LC_MONETARY="de_DE@currency=EUR";
export LC_MESSAGES="de_DE@currency=EUR";

# Always enable colored `grep` output
export GREP_OPTIONS="--color=auto";

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
export DOTFILESDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# Make Sublime the default editor
export EDITOR="nano"

# This makes it easyer to use colors in bash-output
if tput setaf 1 &> /dev/null; then
  export bold=$(tput bold);
  export reset=$(tput sgr0);
  # Solarized colors, taken from http://git.io/solarized-colors.
  export black=$(tput setaf 0);
  export blue=$(tput setaf 33);
  export cyan=$(tput setaf 37);
  export green=$(tput setaf 64);
  export orange=$(tput setaf 166);
  export purple=$(tput setaf 125);
  export red=$(tput setaf 124);
  export violet=$(tput setaf 61);
  export white=$(tput setaf 15);
  export yellow=$(tput setaf 136);
else
  export bold='';
  export reset="\e[0m";
  export black="\e[1;30m";
  export blue="\e[1;34m";
  export cyan="\e[1;36m";
  export green="\e[1;32m";
  export orange="\e[1;33m";
  export purple="\e[1;35m";
  export red="\e[1;31m";
  export violet="\e[1;35m";
  export white="\e[1;37m";
  export yellow="\e[1;33m";
fi;

export danger="${red}";
export warn="${yellow}";
export info="${cyan}";
export success="${green}";

# Theese are needed to install node from brew according to this: http://madebyhoundstooth.com/blog/install-node-with-homebrew-on-os-x/
#export NODE_PATH="/usr/local/lib/node"
# Local node path if exists
export PATH=~/.npm-global/bin:$PATH
#export PATH="/usr/local/share/npm/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"

export PROJECTDIRS=(
  ~/Cloud/server/$1
  ~/Cloud/server/github-derzyklop/$1
  ~/Cloud/server/pxwrk.de/$1.pxwrk.de
  ~/Cloud/server/pxwrk.de/git.pxwrk.de/$1
  ~/S/$1
  ~/S/$1.pxwrk.de
  ~/PW/app/$1
  ~/PW/Projekte/$1
  ~/Dropbox/placeworkers_dokumente/Nils_Neumann/$1
)

# Link Homebrew casks in `/Applications` rather than `~/Applications`
export HOMEBREW_CASK_OPTS="--appdir=/Applications";

export P4DIFF=/usr/local/bin/ksdiff
export P4MERGE=/usr/local/bin/ksdiff
export P4CONFIG=~/p4config.txt

export GIT_ICON_ARRAY=(
	"üêõ bugfix | tests"
	"üíÖ ui"
	"‚ú® feature"
	"üìï story"
	" - NOTHING - "
	"üí¨ text"
	"üé® lint | code-structure"
	"üìù docs | readme"
	"‚ôªÔ∏è refactoring"
	"üöß work in progress"
	"üî• removing code or files"
	"‚ö°Ô∏è performance"
	"üóÉ database | api"
	"üì¶ npm | node"
	"üîß scripts or config"
	# NOTE: More of them here: gitmoji --list
)

export PATH="/usr/local/opt/postgresql@12/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/postgresql@12/lib"
export CPPFLAGS="-I/usr/local/opt/postgresql@12/include"
export PKG_CONFIG_PATH="/usr/local/opt/postgresql@12/lib/pkgconfig"

# Angular
#export NG_BUILD_PROFILING=1

export PATH="/usr/local/opt/python@3.7/bin:$PATH"
